# Agent Runtime Configuration (for bootstrap.py)
# Copy this file to .env and fill in values from Terraform outputs
# Used by: bootstrap.py and all monitoring/ideation agents
#
# To get these values after running Terraform:
#   cd terraform && terraform output

# ============================================================================
# Kafka Cluster Configuration (CLUSTER-SPECIFIC)
# ============================================================================
# Get from: terraform output kafka_bootstrap_endpoint
# Used by: Kafka producers/consumers for data operations
KAFKA_BOOTSTRAP_ENDPOINT=pkc-xxxxx.us-east-1.aws.confluent.cloud:9092

# Get from: terraform output kafka_api_key
# These are CLUSTER-SPECIFIC keys (not org-level Cloud API Keys)
KAFKA_API_KEY=YOUR_CLUSTER_API_KEY_HERE
KAFKA_API_SECRET=YOUR_CLUSTER_API_SECRET_HERE

# ============================================================================
# Schema Registry Configuration
# ============================================================================
# Get from: terraform output schema_registry_rest_endpoint
SCHEMA_REGISTRY_URL=https://psrc-xxxxx.us-east-2.aws.confluent.cloud

# Get from: terraform output schema_registry_api_key
SCHEMA_REGISTRY_API_KEY=YOUR_SCHEMA_REGISTRY_API_KEY_HERE
SCHEMA_REGISTRY_API_SECRET=YOUR_SCHEMA_REGISTRY_API_SECRET_HERE

# ============================================================================
# Claude API Configuration
# ============================================================================
# Used by: Agents for LLM-powered analysis and decisions
# Two backend options: Anthropic Direct API or AWS Bedrock

# Backend Selection: 'anthropic' or 'bedrock'
CLAUDE_BACKEND=anthropic

# --- Option 1: Anthropic Direct API (when CLAUDE_BACKEND=anthropic) ---
# Get API key from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-api03-YOUR_KEY_HERE

# --- Option 2: AWS Bedrock (when CLAUDE_BACKEND=bedrock) ---
# Prerequisites:
# 1. Enable model access: AWS Bedrock Console → Model access →
#    Request access to "Anthropic Claude 3.5 Sonnet v2"
# 2. Create API key: AWS Bedrock Console → API Keys → Create API key

# AWS region where Bedrock is enabled (us-east-1, us-west-2, eu-west-1, etc.)
AWS_REGION=us-east-1

# Bedrock API Key (paste the full value from AWS Console as-is)
# Format: ABSKQmVkcm9ja0FQSUtleS0... (long base64-encoded string)
BEDROCK_API_KEY=your-bedrock-api-key-here

# Alternative Bedrock auth: Use AWS Access Keys instead of BEDROCK_API_KEY
# (Uncomment if using IAM user credentials instead of Bedrock API keys)
# AWS_ACCESS_KEY_ID=AKIA...
# AWS_SECRET_ACCESS_KEY=...

# ============================================================================
# Optional: Cluster/Environment IDs
# ============================================================================
# These are used for API operations that require explicit cluster/env IDs
# Get from: terraform output or Confluent Cloud Console
KAFKA_CLUSTER_ID=lkc-xxxxx
KAFKA_ENVIRONMENT_ID=env-xxxxx
